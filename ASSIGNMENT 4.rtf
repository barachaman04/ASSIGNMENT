{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Arial-Black;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21420\viewh11580\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\f0\b\fs72 \cf0 \ul \ulc0 Assignment -4
\f1\b0\fs24 \ulnone \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\
\
1. Create an Array of salaries, Now do the sum of salaries that are greater than 10000 \
Hint: use reduce function...\
2. Get the Max Salary from the Array...\
3. Count those salaries that are greater than 10000\
note: don't use filter\
Hint: use reduce function...\
4. Maintain an array of Employees. (Array of Objects), Now Sort Employee by Name and Salary.\
5. In Employee Salaries add 10% Tax in Each Employee salary and store in a new Array, So don't modify the Original Array.\
Hint: use filter, map\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\f0\b\fs48 \cf0 \ul \ulc0 \
Answers\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf0 \ulnone \
\
\
FOR QUESTION 1, 2, 3 the salary array I'm defining is:\
const salaries=[10000, 20000,30000, 5000,2700, 380000];\
1. salaries.reduce((total, salary)=> total+(salary>=10000? salary:0), 0);\
output: 440000\
\
2. salaries.reduce((max, salary) => max<salary? salary: max);\
output: 380000\
\
3. salaries.reduce((count, salary)=> count+(salary>10000), 0);\
output: 3\
\
\
\
\
\
\
\
4. First of all we have to construct the class employee with two member elements id and name:\
class employee\{\
this(id, name)\
\{ this.id=id;\
  this.name=name;\}\
\};\
\
now to create array of employee first we need values of id and name as:\
const id=[101, 102, 103, 104, 105];\
const names=['Aayush', 'Arun', 'Deepak', 'Amar', 'Shivam'];\
\
now array creation:\
const employees = new Array(id.length);\
for (let i = 0; i < id.length; i++) \{\
    employees[i]=new employee(id[i], name[i]);\
\}\
originally array is: \
employee\'a0\{id: 101, name: 'Aayush'\}\
employee\'a0\{id: 102, name: 'Arun'\}\
employee\'a0\{id: 103, name: 'Deepak'\}\
employee\'a0\{id: 104, name: 'Amar'\}\
employee\'a0\{id: 105, name: 'Shivam'\}\
\
now that we have our array of employees, \
(i) sorting by names: \
employees.sort((emp1, emp2)=> \{\
    let a=emp1.name.toUpperCase();\
    let b=emp2.name.toUpperCase();\
    return (a<b)? -1:((a>b)? 1: 0);\
\});\
after sorting, array will look like: \
employee\'a0\{id: 101, name: 'Aayush'\}\
employee\'a0\{id: 104, name: 'Amar'\}\
employee\'a0\{id: 102, name: 'Arun'\}\
employee\'a0\{id: 103, name: 'Deepak'\}\
employee\'a0\{id: 105, name: 'Shivam'\}\
\
(ii) sorting by id:\
employees.sort((emp1, emp2)=> \{\
    let a=emp1.id;\
    let b=emp2.id;\
    return (a<b)? -1:((a>b)? 1: 0);\
\});\
after sorting, array will look like: \
employee\'a0\{id: 101, name: 'Aayush'\}\
employee\'a0\{id: 102, name: 'Arun'\}\
employee\'a0\{id: 103, name: 'Deepak'\}\
employee\'a0\{id: 104, name: 'Amar'\}\
employee\'a0\{id: 105, name: 'Shivam'\}\
\
\
\
\
\
Q5. for giving all employees 10% increment, we have: \
first of all our salaries array is: \
let salaries= [10000, 20000, 30000, 5000, 2700, 380000]\
\
To create a new array with 10% incremented salary we can use map function as: \
const incSalaries= salaries.map(salary => salary + 0.1*salary);\
\
The incSalaries array will store salaries as: \
console.log(incSalaries);\
(6)\'a0[11000, 22000, 33000, 5500, 2970, 418000]}